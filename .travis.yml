language: php
sudo: false
dist: trusty

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

env:
  - COMPOSER_FLAGS="--prefer-stable"

jobs:
  allow_failures:
    - php: nightly
  include:
    # SQLite
    - stage: Test
      php: 7.0
      env: DB="sqlite" PHPUNIT_CONF=".travis/phpunit.sqlite.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      env: DB="sqlite" PHPUNIT_CONF=".travis/phpunit.sqlite.xml"
    - stage: Test
      php: 7.2
      env: DB="sqlite" PHPUNIT_CONF=".travis/phpunit.sqlite.xml"
    - stage: Test
      php: 7.3
      env: DB="sqlite" PHPUNIT_CONF=".travis/phpunit.sqlite.xml"
    - stage: Test
      php: 7.3
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="sqlite" PHPUNIT_CONF=".travis/phpunit.sqlite.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      env: DB="sqlite" PHPUNIT_CONF=".travis/phpunit.sqlite.xml"

    # PDO MySQL 5.6
    - stage: Test
      php: 7.0
      env: DB="mysql" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      env: DB="mysql" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: 7.2
      env: DB="mysql" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: 7.3
      env: DB="mysql" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: 7.3
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mysql" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysql.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      env: DB="mysql" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysql.xml"

    # PDO MySQL 5.7
    - stage: Test
      php: 7.0
      sudo: required
      env: DB="mysql" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      env: DB="mysql" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: 7.2
      sudo: required
      env: DB="mysql" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: 7.3
      sudo: required
      env: DB="mysql" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: 7.3
      sudo: required
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mysql" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysql.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      env: DB="mysql" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysql.xml"

    # MySQLi 5.6
    - stage: Test
      php: 7.0
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.2
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mysqli" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysqli.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.6 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"

    # MySQLi 5.7
    - stage: Test
      php: 7.0
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.2
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mysqli" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysqli.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      env: DB="mysqli" MYSQL_VERSION=5.7 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"

    # MariaDB 10.0 (MySQLi)
    - stage: Test
      php: 7.0
      sudo: required
      addons:
        mariadb: 10.0
      env: DB="mariadb" MARIADB_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      addons:
        mariadb: 10.0
      env: DB="mariadb" MARIADB_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.2
      sudo: required
      addons:
        mariadb: 10.0
      env: DB="mariadb" MARIADB_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      addons:
        mariadb: 10.0
      env: DB="mariadb" MARIADB_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      addons:
        mariadb: 10.0
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mariadb" MARIADB_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.mysqli.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      addons:
        mariadb: 10.0
      env: DB="mariadb" MARIADB_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"

    # MariaDB 10.1 (MySQLi)
    - stage: Test
      php: 7.0
      sudo: required
      addons:
        mariadb: 10.1
      env: DB="mariadb" MARIADB_VERSION=10.1 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      addons:
        mariadb: 10.1
      env: DB="mariadb" MARIADB_VERSION=10.1 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.2
      sudo: required
      addons:
        mariadb: 10.1
      env: DB="mariadb" MARIADB_VERSION=10.1 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      addons:
        mariadb: 10.1
      env: DB="mariadb" MARIADB_VERSION=10.1 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      addons:
        mariadb: 10.1
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mariadb" MARIADB_VERSION=10.1 PHPUNIT_CONF=".travis/phpunit.mysqli.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      addons:
        mariadb: 10.1
      env: DB="mariadb" MARIADB_VERSION=10.1 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"

    # MariaDB 10.2 (PDO MySQL)
    - stage: Test
      php: 7.0
      sudo: required
      addons:
        mariadb: 10.2
      env: DB="mariadb" MARIADB_VERSION=10.2 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      addons:
        mariadb: 10.2
      env: DB="mariadb" MARIADB_VERSION=10.2 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.2
      sudo: required
      addons:
        mariadb: 10.2
      env: DB="mariadb" MARIADB_VERSION=10.2 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"
    - stage: Test
      php: 7.3
      sudo: required
      addons:
        mariadb: 10.2
      env: DB="mariadb" MARIADB_VERSION=10.2 PHPUNIT_CONF=".travis/phpunit.mysql.xml"
    - stage: Test
      php: nightly
      sudo: required
      addons:
        mariadb: 10.2
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="mariadb" MARIADB_VERSION=10.2 PHPUNIT_CONF=".travis/phpunit.mysqli.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      addons:
        mariadb: 10.2
      env: DB="mariadb" MARIADB_VERSION=10.2 PHPUNIT_CONF=".travis/phpunit.mysqli.xml"

    # PDO PostgreSQL 9.2
    - stage: Test
      php: 7.0
      addons:
        postgresql: "9.2"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.2 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"

    # PDO PostgreSQL 9.3
    - stage: Test
      php: 7.0
      addons:
        postgresql: "9.3"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.3 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"

    # PDO PostgreSQL 9.4
    - stage: Test
      php: 7.1
      addons:
        postgresql: "9.4"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.4 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"

    # PDO PostgreSQL 9.5
    - stage: Test
      php: 7.1
      addons:
        postgresql: "9.5"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.5 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"

    # PDO PostgreSQL 9.6
    - stage: Test
      php: 7.0
      addons:
        postgresql: "9.6"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.6 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      addons:
        postgresql: "9.6"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.6 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"
    - stage: Test
      php: 7.2
      addons:
        postgresql: "9.6"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.6 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"
    - stage: Test
      php: 7.3
      addons:
        postgresql: "9.6"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.6 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"
    - stage: Test
      php: 7.3
      addons:
        postgresql: "9.6"
      services:
        - postgresql
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="pgsql" PGSQL_VERSION=9.6 PHPUNIT_CONF=".travis/phpunit.pgsql.xml" COMPOSER_FLAGS=""
    - stage: Test
      php: nightly
      sudo: required
      addons:
        postgresql: "9.6"
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=9.6 PHPUNIT_CONF=".travis/phpunit.pgsql.xml"

    # PDO PostgreSQL 10.0
    - stage: Test
      php: 7.2
      sudo: required
      addons:
        postgresql: "10"
        apt:
          packages:
            - postgresql-10
            - postgresql-client-10
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.pgsql10.xml" PGPORT=5433
    - stage: Test
      php: 7.2
      sudo: required
      addons:
        postgresql: "10"
        apt:
          packages:
            - postgresql-10
            - postgresql-client-10
      services:
        - postgresql
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="pgsql" PGSQL_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.pgsql10.xml" COMPOSER_FLAGS="" PGPORT=5433
    - stage: Test
      php: nightly
      sudo: required
      addons:
        postgresql: "10"
        apt:
          packages:
            - postgresql-10
            - postgresql-client-10
      services:
        - postgresql
      env: DB="pgsql" PGSQL_VERSION=10.0 PHPUNIT_CONF=".travis/phpunit.pgsql10.xml" PGPORT=5433

    # SQL Server
    - stage: Test
      php: 7.0
      sudo: required
      services:
        - docker
      env: DB="sqlsrv" PHPUNIT_CONF=".travis/phpunit.sqlsrv.xml" SQL_SERVER_VERSION="5.3.0"
    - stage: Test
      if: NOT type = pull_request
      php: 7.1
      sudo: required
      services:
        - docker
      env: DB="sqlsrv" PHPUNIT_CONF=".travis/phpunit.sqlsrv.xml" SQL_SERVER_VERSION="5.6.1"
    - stage: Test
      php: 7.2
      sudo: required
      services:
        - docker
      env: DB="sqlsrv" PHPUNIT_CONF=".travis/phpunit.sqlsrv.xml" SQL_SERVER_VERSION="5.6.1"
    - stage: Test
      php: 7.3
      sudo: required
      services:
        - docker
      env: DB="sqlsrv" PHPUNIT_CONF=".travis/phpunit.sqlsrv.xml" SQL_SERVER_VERSION="5.6.1"
    - stage: Test
      php: 7.3
      sudo: required
      services:
        - docker
      # This empty flag removes the prefer-stable switch to cause dev dependencies to be installed
      env: DB="sqlsrv" PHPUNIT_CONF=".travis/phpunit.sqlsrv.xml" COMPOSER_FLAGS="" SQL_SERVER_VERSION="5.6.1"

    # PHPCS
    - stage: Coding standard
      php: 7.1
      script:
        - vendor/bin/phpcs --config-set installed_paths vendor/joomla/coding-standards && vendor/bin/phpcs -p --report=full --extensions=php --standard=ruleset.xml src/

before_install:
  - if [[ "$PGSQL_VERSION" == "10.0" ]]; then sudo -u postgres psql -c "CREATE USER postgres WITH PASSWORD ''"; fi;
  - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo "xdebug not available"

before_script:
  - if [[ "$MYSQL_VERSION" == "5.7" ]]; then bash ./.travis/install-mysql-5.7.sh; fi;
  - if [[ "$DB" == "sqlsrv" ]]; then bash ./.travis/install-mssql.sh $SQL_SERVER_VERSION; fi;
  - if [[ "$DB" == "mysql" || "$DB" == "mysqli" || "$DB" == "mariadb" ]]; then mysql -u root -e 'create database joomla_ut;'; fi;
  - if [[ "$DB" == "mysql" || "$DB" == "mysqli" || "$DB" == "mariadb" ]]; then mysql -u root joomla_ut < Tests/Stubs/mysql.sql; fi;
  - if [[ "$DB" == "pgsql" ]]; then psql -U postgres -c 'create database joomla_ut;'; fi;
  - if [[ "$DB" == "pgsql" ]]; then psql -U postgres -d joomla_ut -a -f Tests/Stubs/postgresql.sql; fi;
  - if [[ "$DB" == "sqlsrv" ]]; then /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -l 1 -U sa -P JoomlaFramework123 -b -Q "CREATE DATABASE joomla_ut"; fi;
  - if [[ "$DB" == "sqlsrv" ]]; then /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -l 1 -U sa -P JoomlaFramework123 -i Tests/Stubs/sqlsrv.sql; fi;

install:
  - rm -f composer.lock
  - travis_retry composer -n update $COMPOSER_FLAGS

script:
  - vendor/bin/phpunit --configuration $PHPUNIT_CONF
