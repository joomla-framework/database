<?php
// These stubs were generated by the phan stub generator.
// @phan-stub-for-extension zip@1.15.1

namespace {
class ZipArchive implements \Countable {

    // constants
    public const CREATE = 1;
    public const EXCL = 2;
    public const CHECKCONS = 4;
    public const OVERWRITE = 8;
    public const FL_NOCASE = 1;
    public const FL_NODIR = 2;
    public const FL_COMPRESSED = 4;
    public const FL_UNCHANGED = 8;
    public const FL_ENC_GUESS = 0;
    public const FL_ENC_RAW = 64;
    public const FL_ENC_STRICT = 128;
    public const FL_ENC_UTF_8 = 2048;
    public const FL_ENC_CP437 = 4096;
    public const CM_DEFAULT = -1;
    public const CM_STORE = 0;
    public const CM_SHRINK = 1;
    public const CM_REDUCE_1 = 2;
    public const CM_REDUCE_2 = 3;
    public const CM_REDUCE_3 = 4;
    public const CM_REDUCE_4 = 5;
    public const CM_IMPLODE = 6;
    public const CM_DEFLATE = 8;
    public const CM_DEFLATE64 = 9;
    public const CM_PKWARE_IMPLODE = 10;
    public const CM_BZIP2 = 12;
    public const CM_LZMA = 14;
    public const CM_TERSE = 18;
    public const CM_LZ77 = 19;
    public const CM_WAVPACK = 97;
    public const CM_PPMD = 98;
    public const ER_OK = 0;
    public const ER_MULTIDISK = 1;
    public const ER_RENAME = 2;
    public const ER_CLOSE = 3;
    public const ER_SEEK = 4;
    public const ER_READ = 5;
    public const ER_WRITE = 6;
    public const ER_CRC = 7;
    public const ER_ZIPCLOSED = 8;
    public const ER_NOENT = 9;
    public const ER_EXISTS = 10;
    public const ER_OPEN = 11;
    public const ER_TMPOPEN = 12;
    public const ER_ZLIB = 13;
    public const ER_MEMORY = 14;
    public const ER_CHANGED = 15;
    public const ER_COMPNOTSUPP = 16;
    public const ER_EOF = 17;
    public const ER_INVAL = 18;
    public const ER_NOZIP = 19;
    public const ER_INTERNAL = 20;
    public const ER_INCONS = 21;
    public const ER_REMOVE = 22;
    public const ER_DELETED = 23;
    public const OPSYS_DOS = 0;
    public const OPSYS_AMIGA = 1;
    public const OPSYS_OPENVMS = 2;
    public const OPSYS_UNIX = 3;
    public const OPSYS_VM_CMS = 4;
    public const OPSYS_ATARI_ST = 5;
    public const OPSYS_OS_2 = 6;
    public const OPSYS_MACINTOSH = 7;
    public const OPSYS_Z_SYSTEM = 8;
    public const OPSYS_Z_CPM = 9;
    public const OPSYS_WINDOWS_NTFS = 10;
    public const OPSYS_MVS = 11;
    public const OPSYS_VSE = 12;
    public const OPSYS_ACORN_RISC = 13;
    public const OPSYS_VFAT = 14;
    public const OPSYS_ALTERNATE_MVS = 15;
    public const OPSYS_BEOS = 16;
    public const OPSYS_TANDEM = 17;
    public const OPSYS_OS_400 = 18;
    public const OPSYS_OS_X = 19;
    public const OPSYS_DEFAULT = 3;

    // properties
    public $status;
    public $statussys;
    public $numfiles;
    public $filename;
    public $comment;
    public $statusSys;
    public $numFiles;

    // methods
    public function open($filename, $flags = NULL) {}
    public function setPassword($password) {}
    public function close() {}
    public function count() {}
    public function getStatusString() {}
    public function addEmptyDir($dirname) {}
    public function addFromString($name, $content) {}
    public function addFile($filepath, $entryname = NULL, $start = NULL, $length = NULL) {}
    public function addGlob($pattern, $flags = NULL, $options = NULL) {}
    public function addPattern($pattern, $path = NULL, $options = NULL) {}
    public function renameIndex($index, $new_name) {}
    public function renameName($name, $new_name) {}
    public function setArchiveComment($comment) {}
    public function getArchiveComment($flags = NULL) {}
    public function setCommentIndex($index, $comment) {}
    public function setCommentName($name, $comment) {}
    public function getCommentIndex($index, $flags = NULL) {}
    public function getCommentName($name, $flags = NULL) {}
    public function deleteIndex($index) {}
    public function deleteName($name) {}
    public function statName($filename, $flags = NULL) {}
    public function statIndex($index, $flags = NULL) {}
    public function locateName($filename, $flags = NULL) {}
    public function getNameIndex($index, $flags = NULL) {}
    public function unchangeArchive() {}
    public function unchangeAll() {}
    public function unchangeIndex($index) {}
    public function unchangeName($name) {}
    public function extractTo($pathto, $files = NULL) {}
    public function getFromName($entryname, $len = NULL, $flags = NULL) {}
    public function getFromIndex($index, $len = NULL, $flags = NULL) {}
    public function getStream($entryname) {}
    public function setExternalAttributesName($name, $opsys, $attr, $flags = NULL) {}
    public function setExternalAttributesIndex($index, $opsys, $attr, $flags = NULL) {}
    public function getExternalAttributesName($name, &$opsys, &$attr, $flags = NULL) {}
    public function getExternalAttributesIndex($index, &$opsys, &$attr, $flags = NULL) {}
    public function setCompressionName($name, $method, $compflags = NULL) {}
    public function setCompressionIndex($index, $method, $compflags = NULL) {}
}

function zip_close($zip) {}
function zip_entry_close($zip_ent) {}
function zip_entry_compressedsize($zip_entry) {}
function zip_entry_compressionmethod($zip_entry) {}
function zip_entry_filesize($zip_entry) {}
function zip_entry_name($zip_entry) {}
function zip_entry_open($zip_dp, $zip_entry, $mode = NULL) {}
function zip_entry_read($zip_entry, $len = NULL) {}
function zip_open($filename) {}
function zip_read($zip) {}
}
